# alias ls="ls -G"
# alias ll="ls -l"
# alias la="ls -a"
# alias grep="grep --color"
# alias tree="tree -C"
# alias gittree="git log --graph --pretty='format:%C(yellow)%h%Creset %s %Cgreen(%an)%Creset %Cred%d%Creset'"
# source alias file
source ~/.alias
alias sublime="subl"

# powerline-shell
function powerline_precmd() {
    export PS1="$(~/MyResources/dotfiles/.zsh/powerline-shell/powerline-shell.py $? --shell zsh 2> /dev/null)"
}
function install_powerline_precmd() {
    for s in "${precmd_functions[@]}"; do
            if [ "$s" = "powerline_precmd" ] ; then
                    return
            fi
    done
}
install_powerline_precmd

# VCS情報を取得するzshの便利関数vcs_infoを使う
autoload -Uz vcs_info

# branch情報の表示フォーマットの指定
# %b ブランチ情報
# %a アクション名(mergeなど)
zstyle ':vcs_info:*' formats '[%b]'
zstyle ':vcs_info:*' actionformats '[%b|%a]'
precmd () {
        psvar=()
        LANG=en_US.UTF-8 vcs_info
        [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}


# 名前で色を付けるようにする
autoload colors
colors

# LS_COLORSを設定しておく
export LS_COLORS='di=34:ln=35:so=32:pi=33;ex=31;bd=46;34;cd=43;34;su=41;30:sb=46;30:tw=42;30:ow=43;30'

# ファイル補完候補に色を付ける
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

autoload -U compinit
compinit -u#
# 補完候補の大文字小文字の区別なしに表示する（ただし大文字の補完は大文字の候補にマッチ）
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' '+m:{A-Z}={a-z}'
# 補完候補に色づけする
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# 補完候補を十字キーで選択
zstyle ':completion:*:default' menu select=2


# --pyenv-- To enable shims and autocompletion
export PYENV_ROOT=${HOME}/.pyenv
if [ -n ${PYENV_ROOT} ]
then
        export PATH="${PYENV_ROOT}/bin:${PATH}"
        eval "$(pyenv init -)"
fi


### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

PATH=${HOME}/rvm/bin:$PATH:${HOME}/.node/node_modules/.bin


# Add RVM to PATH for scripting
# RVM
[ -s ${HOME}/rvm/scripts/rvm ] && . ${HOME}/rvm/scripts/rvm


# Source nvm.sh
[ -s ${HOME}/.node/nvm.sh ] && . ${HOME}/.node/nvm.sh
export NODE_PATH="${NVM_PATH}_modules"


# Setting JAVA_HOME
export JAVA_HOME=`/usr/libexec/java_home`
export CATALINA_HOME="$HOME/MyResources/Tomcat/7.0/apache-tomcat-7.0.53"
export CLASSPATH="${CATALINA_HOME}/lib"
export DERBY_HOME="${JAVA_HOME}/db"

#PROMPT="$PROMPT"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'
# PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'
#PROMPT=$'%{\e[38;5;126m%}%m%(!.#.$) %{\e[38;5;25m%}%n%{\e[m%}%{\e[38;5;243m%}:%~ $ '
PROMPT=$'%{\e[38;5;126m%}Date(%D) %{\e[38;5;160m%}%(!.#.>) %{\e[38;5;25m%}%n%{\e[m%}%{\e[38;5;243m%}:%~ $ '
PROMPT2="%{$fg[green]%}%_> %{$reset_color%}"
SPROMPT="%{$fg[red]%}correct: %R -> %r [nyae]? %{$reset_color%}"
RPROMPT="%1(v|%F{yellow}%1v%f|) %{$fg[white]%}[%*]%{$reset_color%}"

PATH=/usr/texbin:$PATH

export LDFLAGS="-L/usr/local/opt/freetype/lib"
# export LDFLAGS="-L/usr/local/opt/freetype/lib -L/usr/local/opt/openssl/lib"
export CPPFLAGS="-I/usr/local/opt/freetype/include"
# export LDFLAGS="-I/usr/local/opt/freetype/include -I/usr/local/opt/openssl/include"


export PHPBREW_SET_PROMPT=1
source /Users/uenosatoshi/.phpbrew/bashrc
